user  nginx;
worker_processes auto;
pid /run/nginx.pid;

events {
    worker_connections 500;
    multi_accept on;
    use epoll;
}

http {
    proxy_cache_path /cache keys_zone=dcache:10m max_size=200m inactive=30d;

    log_format json_combined escape=json '{ "time_local": "$time_local", '
     '"host": "$host", '
     '"remote_addr": "$remote_addr", '
     '"remote_user": "$remote_user", '
     '"request": "$request", '
     '"status": "$status", '
     '"body_bytes_sent": "$body_bytes_sent", '
     '"request_time": "$request_time", '
     '"http_referrer": "$http_referer", '
     '"http_user_agent": "$http_user_agent" }';

    ssi on;
    ssi_silent_errors off;
    gzip off;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    error_log /dev/stderr debug;
    rewrite_log on;

    map $host $lang {
        hostnames;
        ".deckhouse.ru"   "ru";
        # for test environments
        ".deckhouse.ru.*" "ru";
        "ru.localhost"    "ru";
        default           "en";
    }

    map $lang $hugo_upstream {
        "ru"    "hugo_1314";
        default "hugo_1313";
    }
    map $host $publicdocupstream {
        hostnames;
        "ru.localhost"    "https://deckhouse_ru";
        #default           "https://deckhouse_io";
        default           "https://deckhouse_ru";
    }

    map $host $publicdochost {
        hostnames;
        "ru.localhost"    "deckhouse.ru";
        #default           "deckhouse.io";
        default           "deckhouse.ru";
    }

    upstream deckhouse_io {
        server deckhouse.io:443;
    }

    upstream deckhouse_ru {
        server deckhouse.ru:443;
    }

    server {
        root   /app;
        index  index.html;

        charset utf-8;
        listen 80;
        server_name _;

        set_real_ip_from  0.0.0.0/0;
        access_log       /dev/stdout json_combined;
        error_log        /dev/stderr debug;

       location = /search.json {
         return 200 "[]";
       }

       location ~* ^/(assets/|js/|css/|images/|includes/|favicon) {
           proxy_redirect    off;
           proxy_set_header  Host              $publicdochost;
           proxy_set_header  X-Real-IP         $remote_addr;
           proxy_set_header  X-Original-URI    $request_uri;
           proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;

           proxy_pass $publicdocupstream;
       }

        location / {
            proxy_redirect    off;
            proxy_set_header  Host              $host;
            proxy_set_header  X-Real-IP         $remote_addr;
            proxy_set_header  X-Original-URI    $request_uri;
            proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;

            # WebSocket support for livereload
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            proxy_pass http://$hugo_upstream;
        }
    }
    upstream hugo_1313 {
        server hugo:1313;
    }

    upstream hugo_1314 {
        server hugo:1314;
    }
}
